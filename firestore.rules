rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to get user role
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && getUserRole() == 'admin';
    }
    
    // Helper function to check if user is seller
    function isSeller() {
      return isAuthenticated() && getUserRole() == 'seller';
    }
    
    // Helper function to check if user is buyer
    function isBuyer() {
      return isAuthenticated() && getUserRole() == 'buyer';
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection - users can only read/write their own data
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Listings collection - public read, sellers can manage their own
    match /listings/{listingId} {
      allow read: if true; // Public read access for browsing
      allow create: if isSeller();
      allow update, delete: if isSeller() && 
        resource.data.sellerId == request.auth.uid;
    }
    
    // Purchase requests collection - buyers create, users read their own, admins read all
    match /purchaseRequests/{requestId} {
      allow read: if isAuthenticated() && 
        (resource.data.buyerId == request.auth.uid || isAdmin());
      allow create: if isBuyer();
      allow update: if isBuyer() && resource.data.buyerId == request.auth.uid;
    }
    
    // Matches collection - users can read their own matches, admins can read all
    match /matches/{matchId} {
      allow read: if isAuthenticated() && 
        (resource.data.buyerId == request.auth.uid || 
         resource.data.sellerId == request.auth.uid ||
         isAdmin());
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        (resource.data.buyerId == request.auth.uid || 
         resource.data.sellerId == request.auth.uid);
    }
    
    // Feedback collection - users can read feedback for their listings, anyone can create
    match /feedback/{feedbackId} {
      allow read: if isAuthenticated() && 
        (resource.data.sellerId == request.auth.uid || isAdmin());
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        resource.data.buyerId == request.auth.uid;
    }
    
    // Support tickets collection - users manage their own, admins can manage all
    match /tickets/{ticketId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // Admin-only collections
    match /analytics/{docId} {
      allow read, write: if isAdmin();
    }
    
    match /settings/{docId} {
      allow read, write: if isAdmin();
    }
    
    match /auditLogs/{logId} {
      allow read, write: if isAdmin();
    }
    
    // Notifications collection - users can read their own
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Chat messages collection - users can read messages they're part of
    match /messages/{messageId} {
      allow read: if isAuthenticated() && 
        (resource.data.senderId == request.auth.uid || 
         resource.data.receiverId == request.auth.uid);
      allow create: if isAuthenticated();
    }
    
    // Reports collection - users can create, admins can read all
    match /reports/{reportId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
    }
    
    // System metrics collection - admins only
    match /metrics/{docId} {
      allow read, write: if isAdmin();
    }
    
    // User sessions collection - users can manage their own sessions
    match /sessions/{sessionId} {
      allow read, write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated();
    }
    
    // Product categories collection - public read, admin write
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // System announcements collection - public read, admin write
    match /announcements/{announcementId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
